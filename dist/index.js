"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.INIParser=void 0;var _fs=require("fs");var errors=_interopRequireWildcard(require("./errors"),true);function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}class INIParser{constructor(filePath){if(!(0,_fs.existsSync)(filePath)){throw new errors.fileDoesNotExists(filePath);}this.data=new Map();this.data.set("global",{});const fileLines=(0,_fs.readFileSync)(filePath,{encoding:"utf-8"}).split("\n");let lastSection=this.global;for(let line of fileLines){line=line.trimStart().trimEnd();if(line[0]==";"||line[0]=="#"||line==""){continue;}if(line[0]=="["&&line[line.length-1]=="]"){if(line.includes(" ")){throw new errors.SectionCannotContainSpaces(line);}line=line.trim().slice(1,-1);lastSection=this.global;for(const sectionName of line.split(".")){if(!lastSection.children){lastSection.children=new Map();}if(!lastSection.children.has(sectionName)){lastSection.children.set(sectionName,{});}lastSection=lastSection.children.get(sectionName);}}else{if(lastSection==this.global){throw new errors.CannotDeclareItemOutsideASection(line);}let[key,value]=line.split("=");if(value){value=value.trimStart().trimEnd();}key=key.trimStart().trimEnd();if(!lastSection.items){lastSection.items=[];}lastSection.items.push({key,value});}}}get(path){let section=this.global;for(const sectionName of path.trimStart().trimEnd().split(".")){if(sectionName.includes(" ")){throw new errors.SectionCannotContainSpaces(sectionName);}if(!section.children||!section.children.has(sectionName)){return;}section=section.children.get(sectionName);}return section;}getArray(array,section){if(!Array.isArray(section)&&!section.items){throw new errors.SectionMustHaveItems();}const list=new Map();for(const item of Array.isArray(section)?section:section.items){if(item.key.startsWith(array)&&item.key.includes("-")){const properties=item.key.split("-");if(properties.length<3){continue;}if(!list.has(properties[2])){list.set(properties[2],[]);}list.get(properties[2])?.push({key:properties[1],value:item.value});}}const arrayItems=[];for(const[_,items]of list){arrayItems.push(items);}return arrayItems;}tree(s,father){if(!s){s=this.global;}if(!father){father="global";}if(s.items){console.table(s.items);}if(s.children){for(const[sectionName,section]of s.children){if(section.items){console.log(sectionName,`(${father}):`);}this.tree(section,sectionName);}}}static getValue(key,section){if(!Array.isArray(section)&&!section.items){throw new errors.SectionMustHaveItems();}for(const item of Array.isArray(section)?section:section.items){if(item.key==key){return item.value;}}}static hasKey(key,section){if(!Array.isArray(section)&&!section.items){throw new errors.SectionMustHaveItems();}for(const item of Array.isArray(section)?section:section.items){if(item.key==key){return true;}}return false;}get global(){return this.data.get("global");}}exports.INIParser=INIParser;